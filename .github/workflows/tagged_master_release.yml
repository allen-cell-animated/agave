name: C++ Release Build
on:
  push:
    tags:
      - v*

jobs:
  cmake-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.5.3
          modules: qtwebsockets qtimageformats
      - name: macos install deps
        if: matrix.os == 'macos-latest'
        env:
          CC: clang
          CXX: clang++
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.15
          brew install spdlog glm libtiff nasm zstd
      - name: macos build and test
        if: matrix.os == 'macos-latest'
        env:
          CC: clang
          CXX: clang++
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.15
          mkdir ./build
          cd build
          cmake ..
          cmake --build . --target agave_test --config Release
          sudo cmake --build . --target install --config Release
          zip -vr agave-macos.zip agave.app/
        shell: bash
      - name: Upload mac artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: agave-macos
          path: ./build/agave-macos.zip
      - name: linux install deps
        if: matrix.os == 'ubuntu-latest'
        env:
          CC: gcc
          CXX: g++
        run: |
          sudo apt-get install libspdlog-dev libglm-dev libgl1-mesa-dev libegl1-mesa-dev libtiff-dev libzstd-dev nasm
      - name: linux build and test
        if: matrix.os == 'ubuntu-latest'
        env:
          CC: gcc-10
          CXX: g++-10
        run: |
          pwd
          mkdir ./build
          cd build
          cmake ..
          cmake --build . --target agave_test --config Release
          cmake --build . --target install --config Release
        shell: bash
      - name: windows install deps
        if: matrix.os == 'windows-latest'
        env:
          vc_arch: "x64"
        run: |
          vcpkg install --triplet x64-windows tiff[jpeg,libdeflate,zip,zstd] glm zlib spdlog zstd
      - name: windows get nasm
        if: matrix.os == 'windows-latest'
        uses: ilammy/setup-nasm@v1
      - name: Remove bad Strawberry Perl patch binary in search path
        # https://github.com/actions/runner-images/issues/5459#issuecomment-1532856844
        if: matrix.os == 'windows-latest'
        run: del C:\Strawberry\c\bin\patch.EXE
      - name: windows build and test
        if: matrix.os == 'windows-latest'
        env:
          vc_arch: "x64"
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE="%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows -A x64 ..
          cmake --build . --target agave_test --config Release
          cmake --build . --target agaveapp --config Release
          cmake --build . --target INSTALL --config Release
          cmake --install .
          powershell Compress-Archive -Path .\agave-install -DestinationPath agave-win.zip
        shell: cmd
      - name: Upload windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: agave-win
          path: ./build/agave-win.zip

  publish_webclient:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: |
          cd webclient
          npm ci
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish_pythonclient:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: "x64"
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      - name: Build Package
        run: |
          cd agave_pyclient
          python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages-dir: agave_pyclient/dist/
          verbose: true
  docs_pythonclient:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - run: |
          cd agave_pyclient
          pip install .
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "agave_pyclient/docs/"
          pre-build-command: "pip install -e ./agave_pyclient"
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "agave_pyclient/docs/"
          pre-build-command: "pip install -e ./agave_pyclient && apt-get --allow-releaseinfo-change update -y && apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended"
          build-command: "make latexpdf"
      - uses: actions/upload-artifact@v4
        with:
          name: DocumentationPythonClientHTML
          path: agave_pyclient/docs/_build/html/
      - uses: actions/upload-artifact@v4
        with:
          name: DocumentationPythonClientPDF
          path: agave_pyclient/docs/_build/latex/agave_pyclient.pdf
      - name: Publish Docs
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: agave_pyclient/docs/_build/html/ # The folder the action should deploy.
          target-folder: agave_pyclient/
          clean: false
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
          pre-build-command: "apt-get --allow-releaseinfo-change update -y && apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended"
          build-command: "make latexpdf"
      - uses: actions/upload-artifact@v4
        with:
          name: DocumentationHTML
          path: docs/_build/html/
      - uses: actions/upload-artifact@v4
        with:
          name: DocumentationPDF
          path: docs/_build/latex/agave.pdf
      - name: Publish Docs
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: docs/_build/html/ # The folder the action should deploy.
          clean: false
  make-release:
    runs-on: ubuntu-latest
    needs: cmake-build
    steps:
      # Since Github actions (currently) doesn't provide a slugged version of the git tag we have to
      # create it by ourselves. It is then made available to other steps in this job as a step.outputs
      # variable
      - name: Get the version (git tag)
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Get mac build artifact
        uses: actions/download-artifact@v4
        with:
          name: agave-macos
          path: agave-macos
      - name: Get windows build artifact
        uses: actions/download-artifact@v4
        with:
          name: agave-win
          path: agave-win
      - name: Get PDF documentation build artifact
        uses: actions/download-artifact@v4
        with:
          name: DocumentationPDF
          path: DocumentationPDF
      - name: Version the artifacts
        run: |
          mv ${{ github.workspace }}/agave-macos/agave-macos.zip ${{ github.workspace }}/agave-macos/agave-${{ steps.get_version.outputs.VERSION }}-macos.zip
          mv ${{ github.workspace }}/agave-win/agave-win.zip ${{ github.workspace }}/agave-win/agave-${{ steps.get_version.outputs.VERSION }}-win.zip
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: true
          files: |
            ${{ github.workspace }}/agave-macos/agave-${{ steps.get_version.outputs.VERSION }}-macos.zip
            ${{ github.workspace }}/agave-win/agave-${{ steps.get_version.outputs.VERSION }}-win.zip
            ${{ github.workspace }}/DocumentationPDF/agave.pdf
